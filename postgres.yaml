    apiVersion: v1
    kind: Secret
    metadata:
      name: postgres-credentials
      labels:
        app: postgres
    type: Opaque
    data:
      user: cG9zdGdyZXM=
      password: eWFubg==

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
   matchLabels:
    app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: "IfNotPresent"
          ports:
          - containerPort: 5432
          env:
          - name: POSTGRES_USER
            valueFrom:
             secretKeyRef:
               name: postgres-credentials
               key: user
          - name: POSTGRES_PASSWORD
            valueFrom:
             secretKeyRef:
               name: postgres-credentials
               key: password
          - name: POSTGRES_DB
            value: 'postgres'
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
    kind: PersistentVolume
    apiVersion: v1
    metadata:
      name: postgres-pv-volume
      labels:
        type: local
        app: postgres
    spec:
      storageClassName: manual
      capacity:
        storage: 5Gi
      accessModes:
        - ReadWriteMany
      hostPath:
        path: "/home/docker/FirstProject"
---
    kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: postgres-pv-claim
      labels:
        app: postgres
    spec:
      storageClassName: manual
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 5Gi

---
    apiVersion: v1
    kind: Service
    metadata:
      name: postgres-svc
      labels:
        app: postgres
    spec:
       type: ClusterIP
       ports:
       - port: 5432
       selector:
          app: postgres
